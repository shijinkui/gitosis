# this config file tries to show a bit of everything, most real life
# configurations really only need a "group" section with "members" and
# "writable"

[gitosis]
## To override the default ~/repositories path
# repositories = repositories

## Allow gitweb to show all known repositories. If you want gitweb,
## you need either this or a [repo foo] section for each repository
## you want visible in gitweb.
gitweb = no

## Allow git-daemon to publish all known repositories. As with gitweb,
## this can be done globally or per-repository.
daemon = no

## Logging level, one of DEBUG, INFO, WARNING, ERROR, CRITICAL
loglevel = DEBUG

[group quux]
members = jdoe wsmith @anothergroup
writable = foo bar baz/thud
readonly = xyzzy

## You can use groups just to avoid listing users multiple times. Note
## no writable= or readonly= lines.
[group anothergroup]
members = alice bill

## You can play fancy tricks by making some repositories appear with
## different names in different contexts. Not really supported
## everywhere (e.g. gitweb) and can be confusing -- experts only.
map writable visiblename1 = actualname1
map readonly visiblename2 = actualname2

[repo foo]
## Allow gitweb to show this repository.
gitweb = yes

## Oneline description of the project, mostly for gitweb.
description = blah blah

## Owner of this repository. Used in gitweb list of projects.
owner = John Doe

## Allow git-daemon to publish this repository.
daemon = yes

# Special group that adds support for repositories of the form
# user/<user>/<foo>.git. Otherwise admins would have to add specific
# entries for every single user repo, and that would quickly become an
# admin nightmare!
#
# The following config group will allow *write* access to
# user/<user>/<foo>.git for the owner ($user) and the @admins group
#
# If you want to allow a specific user (Bob) to have write access to
# a specific user repo (belonging to Alice), you will need to add a
# specific group describing Alice's user repo and list Bob in the
# members field there as normal. That will supplement the normal
# access from the wild-card group entries. Sorry, this *will* require
# admin work.
[group user-write]
members = $user @admins
writable = users/$user/*

# And this will add read-only access to the same set of modules for
# anyone in the @amino group
[group other-user-readonly]
members = @amino
readonly = users/*/*

# Finally, add gitweb and git:// access to the user repositories too.
# The $user in the "repo" line is important, as that's how we look up
# the username when generating the Description and Owner fields in
# gitweb output. If we can find user details for $user, we will
# substitute their name in the Description field, replacing
# '$username'
[repo users/$user/*]
description = Public repository for $username

[gitweb]
## Where to make gitweb link to as it's "home location".
## NOT YET IMPLEMENTED.
# homelink = http://example.com/
